{"version":3,"file":"static/js/861.5ca81ac9.chunk.js","mappings":"gSAEaA,EAAOC,EAAAA,QAAAA,KAAH,8NAiBJC,EAAYD,EAAAA,QAAAA,MAAH,oJASTE,EAAcF,EAAAA,QAAAA,MAAH,sQAaXG,EAAaH,EAAAA,QAAAA,OAAH,okB,oBCvCVI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QACpCC,EAAa,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SACrCC,EAAW,SAAAP,GAAK,OAAIA,EAAMC,SAASO,OAEnCC,GAAqBC,EAAAA,EAAAA,IAChC,CAACX,EAAaI,IACd,SAACF,EAAUG,GACT,IAAMO,EAAmBP,EAAOQ,cAC1BC,EAAkBZ,EAASG,QAAO,qBAAGU,KACpCF,cAAcG,SAASJ,MAG9B,OAFuB,OAAIE,GAAiBG,MAAK,SAACC,EAAGC,GAAJ,OAC/CD,EAAEH,KAAKK,cAAcD,EAAEJ,Y,mBCNhBM,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMvB,GAAWwB,EAAAA,EAAAA,IAAY1B,GACvB2B,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBhB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,MACd,OAAQjB,GACN,IAAK,OACHQ,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,SAIAC,EAAY,WAChBV,EAAQ,IACRE,EAAU,KA8BZ,OACE,UAAC9B,EAAD,CAAMuC,SA5Ba,SAAAJ,GAGnB,GAFAA,EAAMK,iBAEO,KAATpB,GAA0B,KAAXS,EACjB,OAAOY,EAAAA,GAAAA,MAAY,+BAOrB,GAJyBlC,EAASmC,MAChC,SAAAC,GAAO,OAAIA,EAAQvB,KAAKF,gBAAkBE,EAAKF,iBAM/C,OAFAuB,EAAAA,GAAAA,MAAA,WAAgBrB,EAAhB,mCACAkB,IAIF,IAAMM,EAAO,CACXxB,KAAAA,EACAS,OAAAA,GAGFG,GAASa,EAAAA,EAAAA,IAAWD,IACpBH,EAAAA,GAAAA,QAAA,WAAkBrB,EAAlB,yBACAkB,KAIA,WAEE,UAACpC,EAAD,YACE,SAAC,MAAD,CAAU4C,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,YAAa,SADzD,QAGE,SAAC9C,EAAD,CACE+C,KAAK,OACL9B,KAAK,OACLiB,MAAOjB,EACP+B,SAAUjB,EACVkB,QAAQ,yHACRC,MAAM,yIACNC,aAAa,MACbC,WAAS,QAGb,UAACrD,EAAD,YACE,SAAC,MAAD,CAAS4C,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,YAAa,SADxD,UAGE,SAAC9C,EAAD,CACE+C,KAAK,MACL9B,KAAK,SACLiB,MAAOR,EACPsB,SAAUjB,EACVkB,QAAQ,yFACRC,MAAM,+FACNC,aAAa,YAKjB,SAAClD,EAAD,CAAY8C,KAAK,SAAjB,6BC1FOM,EAAcvD,EAAAA,QAAAA,MAAH,yOAaXE,EAAcF,EAAAA,QAAAA,MAAH,sQ,UCTXwD,EAAS,WACpB,IAAM/C,GAASqB,EAAAA,EAAAA,IAAYtB,GACrBuB,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACuB,EAAD,YACE,SAAC,MAAD,CAAUV,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,YAAa,SADzD,wBAGE,SAAC,EAAD,CACEC,KAAK,OACL9B,KAAK,SACLiB,MAAO3B,EACPyC,SAVW,SAAAhB,GAAK,OAAIH,GAAS0B,EAAAA,EAAAA,GAAcvB,EAAMC,OAAOC,SAWxDe,QAAQ,yHACRC,MAAM,yIACNC,aAAa,Y,SCpBRK,EAAgB1D,EAAAA,QAAAA,IAAH,sECCb2D,EAAS,WACpB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAWE,MAAM,UAAUb,OAAQ,GAAID,MAAO,Q,UCHvCe,EAAiB7D,EAAAA,QAAAA,GAAH,4SAgBd8D,EAAc9D,EAAAA,QAAAA,IAAH,wIAgBX+D,GARc/D,EAAAA,QAAAA,IAAH,6CAIKA,EAAAA,QAAAA,IAAH,+CAIEA,EAAAA,QAAAA,OAAH,0iBAwBZgE,GAAgBhE,EAAAA,EAAAA,SAAOiE,EAAAA,EAAPjE,CAAH,ggDCvCbkE,EAAkB,SAAC,GAEzB,IAAD,IADJxB,QAAWyB,EACP,EADOA,GAAIhD,EACX,EADWA,KAAMS,EACjB,EADiBA,OAErB,GAAkCF,EAAAA,EAAAA,UAASP,GAA3C,eAAOiD,EAAP,KAAkBC,EAAlB,KACA,GAAsC3C,EAAAA,EAAAA,UAASE,GAA/C,eAAO0C,EAAP,KAAoBC,EAApB,KACMxC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,UAAC6B,EAAD,YACE,SAAC,MAAD,CAAgBhB,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,YAAa,WAC7D,UAACc,EAAD,YAIE,wBACE,SAACE,EAAD,CACAf,KAAK,OACLb,MAAOgC,EACPI,OA3Be,SAAAL,GAAE,OAAI,SAAA/B,GACvBA,IAAUjB,IACdkD,EAAajC,GACbL,GAAS0C,EAAAA,EAAAA,IAAkB,CAAEN,GAAAA,EAAI/B,MAAAA,OAwBnBsC,CAAeP,GACvBQ,oBAAkB,OAGpB,SAACX,EAAD,CACEf,KAAK,MACLb,MAAOkC,EACPE,OA7BiB,SAAAL,GAAE,OAAI,SAAA/B,GACzBA,IAAUR,IACd2C,EAAenC,GACfL,GAAS6C,EAAAA,EAAAA,IAAoB,CAAET,GAAAA,EAAI/B,MAAAA,OA0BrByC,CAAiBV,GACzBQ,oBAAkB,QAGtB,SAACZ,EAAD,CAAcd,KAAK,SAAS6B,QAAS,kBA3BjB,SAAAX,GACtBpC,GAASgD,EAAAA,EAAAA,IAAcZ,IACvB3B,EAAAA,GAAAA,QAAA,WAAkBrB,EAAlB,6BAyB6C6D,CAAgBb,IAA3D,wBC/DOc,EAAajF,EAAAA,QAAAA,GAAH,wPAWVkF,EAAgBlF,EAAAA,QAAAA,EAAH,+CCRbmF,GAAc,WACzB,IAAM7E,GAAWwB,EAAAA,EAAAA,IAAYhB,GAE7B,OACsB,IAApBR,EAAS8E,QAEL,SAACH,EAAD,UACG3E,EAAS+E,KAAI,SAAA3C,GAAO,OACnB,SAACwB,EAAD,CAEExB,QAASA,GADJA,EAAQyB,UAMnB,SAACe,EAAD,sC,WCTKI,GAAe,WAC1B,IAAMhF,GAAWwB,EAAAA,EAAAA,IAAY1B,GACvBO,GAAUmB,EAAAA,EAAAA,IAAYpB,GACtBG,GAAQiB,EAAAA,EAAAA,IAAYlB,GACpBmB,GAAWC,EAAAA,EAAAA,MAOjB,GANAuD,QAAQC,IAAIlF,IAEZmF,EAAAA,EAAAA,YAAU,WACR1D,GAAS2D,EAAAA,EAAAA,SACR,CAAC3D,IAEAlB,EACF,OAAO2B,EAAAA,GAAAA,MAAY,gCAGrB,IAAMmD,EAAiC,IAApBrF,EAAS8E,OAE5B,OACE,6BACE,SAAC,MAAD,wBACA,SAAC3D,EAAD,IACCkE,IACC,gCACGhF,GAAU,SAACgD,EAAD,KAAa,SAACH,EAAD,KACxB,SAAC2B,GAAD","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n  display: flex;\n  /* flex-wrap: wrap; */\n  flex-direction: column;\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  border-radius: 5px;\n`;\n\n// export const FieldWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding: 5px;\n  /* padding-left: 4px;\n  padding-right: 4px; */\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const FormButton = styled.button`\n  width: 140px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-top: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #fff;\n  background-color: #034f84;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  transition: all cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {\n    font-weight: 700;\n    background-color: #F2552C;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    const fileredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter));\n    const sortedContacts = [...fileredContacts].sort((a, b) =>\n      a.name.localeCompare(b.name));\n    return sortedContacts;\n  },\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast from 'react-hot-toast';\nimport { MdPerson, MdPhone } from 'react-icons/md';\nimport { Form, FormLabel, SearchInput, FormButton } from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name === '' || number === '') {\n      return toast.error('Please, fill in all fields!');\n    }\n\n    const existingContacts = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContacts) {\n      toast.error(`\"${name}\" is already in contacts!`);\n      resetForm();\n      return;\n    }\n\n    const item = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(item));\n    toast.success(`\"${name}\" added to contacts!`);  \n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {/* <FieldWrapper> */}\n      <FormLabel>\n        <MdPerson style={{ width: 23, height: 23, marginRight: '5px' }} />\n        Name        \n        <SearchInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n      </FormLabel>\n      <FormLabel>\n        <MdPhone style={{ width: 23, height: 23, marginRight: '5px' }} />  \n        Number        \n        <SearchInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          autoComplete=\"off\"\n          // autoFocus\n        />\n      </FormLabel>\n      {/* </FieldWrapper> */}\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  width: 300px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding: 5px;\n  /* padding-left: 5px;\n  padding-right: 5px; */\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { MdPerson } from 'react-icons/md';\nimport { FilterLabel, SearchInput } from './Filter.styled';\nimport { getFilter } from \"redux/contacts/contacts-selectors\";\nimport { filterContact } from 'redux/contacts/contacts-actions';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = event => dispatch(filterContact(event.target.value));\n\n  return (\n    <FilterLabel>\n      <MdPerson style={{ width: 23, height: 23, marginRight: '5px' }} />\n      Find contact by name\n      <SearchInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        autoComplete=\"off\"\n        // autoFocus\n      />\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots color=\"#034f84\" height={88} width={80} />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport EdiText from 'react-editext';\n\nexport const ContactSetUnit = styled.li`\n  display: flex;\n  align-items: center;\n  color: #034f84;  \n  transition: all cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {    \n    color: #F2552C;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n    border-bottom: 1px dashed rgba(128, 128, 128, 0.3);\n  }\n`;\n\nexport const ContactInfo = styled.div`\n  font-style: italic;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  /* color: #010101;   */\n`;\n\nexport const ContactName = styled.div`\n  font-weight: 700;\n`;\n\nexport const ContactNumber = styled.div`\n  padding-left: 20px;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 70px;\n  height: 40px;\n  margin-left: auto;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #fff;\n  background-color: #034f84;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  transition: all cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {\n    font-weight: 700;\n    background-color: #F2552C;\n  }\n`;\n\nexport const StyledEdiText = styled(EdiText)`\n  button {\n    padding-top: 2px;\n    padding-bottom: 2px;\n    /* padding: 0; */\n    border-radius: 5px;\n    border: none; \n    background-color: #fff;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);   \n  }\n  button[editext=\"edit-button\"] {\n    /* padding: 0;      */\n    /* &:hover {\n      color: #fff;\n      background-color: #034f84; */\n    /* width: 50px; */\n  }\n  button[editext=\"save-button\"] {\n    transition: all cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n    /* width: 50px; */\n    /* padding: 0; */\n    &:hover {\n      background-color: greenyellow;\n      /* background-color: #d5f4e6; */\n    }\n  }\n  button[editext=\"cancel-button\"] {\n    transition: all cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n    /* padding: 0; */\n    &:hover {\n      color: #fff;\n      background-color: crimson;\n    }\n  }\n  input, textarea {\n    /* background: #1D2225; */\n    /* color: #F4C361; */\n    /* font-weight: bold; */\n    padding-top: 1px;\n    padding-bottom: 1px;\n    line-height: 1.3;\n    border-radius: 5px;\n    border: none;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n    &:not(:last-child) {\n    margin-bottom: 1px;\n  }\n  }\n  div[editext=\"view-container\"], div[editext=\"edit-container\"] {\n    /* background: #6293C3; */\n    /* padding: 15px; */\n    /* border-radius: 5px; */\n    /* color: #fff; */\n}\n`\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\n// import EdiText from 'react-editext'\nimport toast from 'react-hot-toast';\nimport { MdContactPhone } from 'react-icons/md';\nimport {\n  ContactSetUnit,\n  ContactInfo,\n  // ContactName,\n  // ContactNumber,\n  DeleteButton,\n  StyledEdiText,\n} from './ContactListItem.styled';\nimport {\n  deleteContact,\n  changeContactName,\n  changeContactNumber\n} from \"redux/contacts/contacts-operations\";\n\nexport const ContactListItem = ({\n  contact: { id, name, number },\n}) => {\n  const [nameValue, setNameValue] = useState(name);\n  const [numberValue, setNumberValue] = useState(number);\n  const dispatch = useDispatch();\n\n  const handleSaveName = id => value => {\n    if (value === name) return;\n    setNameValue(value);\n    dispatch(changeContactName({ id, value }));\n  };\n  const handleSaveNumber = id => value => {\n    if (value === number) return;\n    setNumberValue(value);\n    dispatch(changeContactNumber({ id, value }));\n  };\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n    toast.success(`\"${name}\" deleted from contacts!`);  \n  };\n\n  return (\n    <ContactSetUnit>\n      <MdContactPhone style={{ width: 48, height: 48, marginRight: '10px' }} />\n      <ContactInfo>        \n        {/* <b>{name}:</b> {number} */}\n        {/* <ContactName>{name}</ContactName>\n        <ContactNumber>{number}</ContactNumber> */}\n        <b>\n          <StyledEdiText\n          type=\"text\"\n          value={nameValue}\n          onSave={handleSaveName(id)}\n          showButtonsOnHover\n          />\n        </b>\n        <StyledEdiText\n          type=\"tel\"\n          value={numberValue}\n          onSave={handleSaveNumber(id)}\n          showButtonsOnHover\n            />\n      </ContactInfo>\n      <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </DeleteButton>\n    </ContactSetUnit>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\n\n\n// ==========================================\n// import PropTypes from 'prop-types';\n// import { useDispatch } from \"react-redux\";\n// import toast from 'react-hot-toast';\n// import { MdContactPhone } from 'react-icons/md';\n// import {\n//   ContactSetUnit,\n//   ContactInfo,\n//   DeleteButton,\n// } from './ContactListItem.styled';\n// import { deleteContact } from \"redux/contacts/contacts-operations\";\n\n// export const ContactListItem = ({\n//   contact: { id, name, number },\n// }) => {\n//   const dispatch = useDispatch();\n//   const onDeleteContact = id => {\n//     dispatch(deleteContact(id));\n//     toast.success(`\"${name}\" deleted from contacts!`);  \n//   };\n\n//   return (\n//     <ContactSetUnit>\n//       <MdContactPhone style={{ width: 25, height: 25, marginRight: '10px' }} />\n//       <ContactInfo>\n//         <b>{name}:</b> {number}\n//       </ContactInfo>\n//       <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\n//         Delete\n//       </DeleteButton>\n//     </ContactSetUnit>\n//   );\n// }\n\n// ContactListItem.propTypes = {\n//   contact: PropTypes.objectOf(PropTypes.string.isRequired),\n// };","import styled from 'styled-components';\n\nexport const ContactSet = styled.ul`\n  width: 50%;\n  padding: 10px;\n  margin-left: auto;\n  margin-right: auto;  \n  /* background-color: #d5f4e6; */\n  background-color: #faf9dd;\n  border-radius: 5px;\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const ContactsError = styled.p`\n  text-align: center;\n`;\n","import { useSelector } from \"react-redux\";\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactSet, ContactsError } from './ContactList.styled';\nimport { getVisibleContacts } from \"redux/contacts/contacts-selectors\";\n\nexport const ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  \n  return (\n    contacts.length !== 0\n      ? (\n        <ContactSet>\n          {contacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              contact={contact}\n            />\n          ))}\n        </ContactSet>\n      )\n      : <ContactsError>There's no information</ContactsError> \n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast from 'react-hot-toast';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Title } from 'components/App/App.styled';\nimport { getContacts, getLoading, getError } from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const loading = useSelector(getLoading);\n  const error = useSelector(getError);  \n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (error) {\n    return toast.error('Oops!...Something went wrong');\n  }\n\n  const isContacts = contacts.length !== 0;\n\n  return (\n    <main>\n      <Title>Contacts</Title>\n      <ContactForm />\n      {isContacts &&\n        <>\n          {loading ? <Loader /> : <Filter />}\n          <ContactList />\n        </>\n      }\n    </main>    \n  );\n};\n"],"names":["Form","styled","FormLabel","SearchInput","FormButton","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","fileredContacts","name","includes","sort","a","b","localeCompare","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","resetForm","onSubmit","preventDefault","toast","find","contact","item","addContact","style","width","height","marginRight","type","onChange","pattern","title","autoComplete","autoFocus","FilterLabel","Filter","filterContact","LoaderWrapper","Loader","color","ContactSetUnit","ContactInfo","DeleteButton","StyledEdiText","EdiText","ContactListItem","id","nameValue","setNameValue","numberValue","setNumberValue","onSave","changeContactName","handleSaveName","showButtonsOnHover","changeContactNumber","handleSaveNumber","onClick","deleteContact","onDeleteContact","ContactSet","ContactsError","ContactList","length","map","ContactsPage","console","log","useEffect","fetchContacts","isContacts"],"sourceRoot":""}